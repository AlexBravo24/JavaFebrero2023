-- Con dos guiones puedo poner un comentario

/* podemos poner comentarios de multiples lineas
SQL - Lenguaje de consulta estructurada (Structured Query Lnguajge)
Es un lenguaje para actualizar, obtener y calcular informacion en 
bases de datos relacionales.

Base de datos - conjunto de datos organizados y relacionados entre si
y que son almacenados en tablas.
*/

/* La estuctura de las tablas queda de la siguiente manera

- Toda tabla debe llevar una llave primaria (PRIMARY KEY)
(Id o un numero que identifique cada registro de la misma)

- Pueden llevar tambien llaves foraneas -> llave primaria que proviene de otra tabla.

- Tipo de dato - pueden ser numericos, caracteres, tipo fecha, etc.
    
        Caracter -> Char, Varchar, Varchar2, Nchar, NVARCHAR2
        Numericos -> long, int, NUMBER
        

*/

--CREAR TABLA DE EJEMPLO
--ALMACENAR DATOS DE UNA PERSONA
--id
--nombre
--edad
--sexo

create table persona(
idPersona number primary key,
nombre nvarchar2(20),
edad number,
sexo nvarchar2(1)
);

-- Para ver estructura de una tabla

describe persona;

--Eliminar tabla

-- drop table persona;

--CREAR TABLA DE ALUMNOS
--matricula
--nombre
--fecha de nacimiento
--sexo
--semestre
--status

create table alumno(
id_alumno NUMBER primary key,
nombre nvarchar2(30),
fechanac date,
sexo nvarchar2(20),
semestre nvarchar2(30),
status number
);


--CREAR TABLA DE CARRERAS UNIVERSITARIAS
CREATE TABLE CARRERAS(
ID_CARRERA NUMBER PRIMARY KEY,
NOMBRE VARCHAR2(30),
DURACIONSEM NUMBER,
AREA NVARCHAR2(30),
CREDITOS NUMBER
);

--ENTIDADES FUERTES --> No dependen de otras para existir (tienen sus datos completos)
--ENTIDADES DEBILES --> Dependen de otra tabla u otros datos para existir
-- se identifican facilmente porque reciben una llave foranea.

--CREAR TABLA  QUE PERMITA RELACIONAR A LOS ALUMNOS CON SUS RESPECTIVAS CARRERAS
CREATE TABLE CARRERAS_ALUMNOS(
ID_CA NUMBER PRIMARY KEY,
ID_CARRERA NUMBER,
ID_ALUMNO NUMBER
);

--AGREGAR RESTRICCIONES A UNA TABLA
-- LAS RESTRICCIONES DEBEN LLEVAR UN NOMBRE Y SE IDENTIFICAN POR LA PALABRA "CONSTRAINT"

--EJEMPLO, VAMOS A AGREGAR UNA RESTRICCION EN EL SEXO EN LA TABLA ALUMNO PARA QUE 
--SOLO PODAMOS INTRODUCIR 'MASCULINO' O 'FEMENINO'

ALTER TABLE ALUMNO ADD CONSTRAINT CHECK_SEXO
CHECK (SEXO IN('MASCULINO','FEMENINO'));

--BORRAR RESTRICCION EN UNA TABLA
--ALTER TABLE ALUMNO DROP CONSTRAINT CHECK_SEXO;

--CREAR OTRA RESTRICCION EN LA TABLA CARRERAS
-- PARA NO REPETIR VALORES
--UNIQUE PARA AGREGAR UNA RESTRICCION UNICA EN UN REGISTRO

ALTER TABLE CARRERAS ADD CONSTRAINT UNIQ_NOMBRE_CARRERA
UNIQUE (NOMBRE);

--AGREGANDO UNA LLAVE FORANEA
--UNA LLAVE FORANEA TAMBIEN ES UNA RESTRICCION 
--VAMOS A ESPECIFICAR DE DONDE PROVIENE DICHA LLAVE

--SINTAXIS GENERAL

--ALTER TABLE NOMBRETABLA ADD CONSTRAINT NOMBRERESTRICCION
--FOREIGNKEY (COLUMNA QUE RECIBE) --QUIEN RECIBE
--REFERENCES NOMBRETABLA (COLUMNA CON LLAVE PRIMARIA); --QUIEN DA

ALTER TABLE CARRERAS_ALUMNOS ADD CONSTRAINT FK_ID_ALUMNO
FOREIGN KEY (ID_ALUMNO)
REFERENCES ALUMNO (ID_ALUMNO);


ALTER TABLE CARRERAS_ALUMNOS ADD CONSTRAINT FK_ID_CARRERAS
FOREIGN KEY (ID_CARRERA)
REFERENCES CARRERAS (ID_CARRERA);

DESCRIBE CARRERAS;

--AGREGAR UNA COLUMNA A UNA TABLA EXISTENTE

ALTER TABLE CARRERAS ADD PRESUPUESTO NUMBER;

--ELIMINAR UNA COLUMNA DE UNA TABLA EXISTENTE

ALTER TABLE CARRERAS DROP COLUMN PRESUPUESTO;

--PODEMOS INDICAR USO DE DECIMALES
ALTER TABLE CARRERAS ADD PRESUPUESTO NUMBER(6,2); 

--RENOMBRAR UNA COLUMNA
ALTER TABLE CARRERAS RENAME COLUMN PRESUPUESTO TO PRESUPUESTO_MENSUAL;

--MODIFICAR EL TIPO DE DATO DE LA COLUMNA (SIEMPRE Y CUANDO NO TENGA DATOS INSERTADOS)

ALTER TABLE CARRERAS MODIFY PRESUPUESTO_MENSUAL NVARCHAR2(10);

ALTER TABLE CARRERAS MODIFY PRESUPUESTO_MENSUAL NUMBER(6,2);

-- INSERCION DE DATOS INDIVIDUALES

DESCRIBE ALUMNO;

----------------------------------------------------------------------------

INSERT INTO ALUMNO VALUES(1,'EDUARDO','13/10/1990','MASCULINO','8° SEMESTRE', 1);

-- REALIZANDO CONSULTA GENERAL DE LOS DATOS INGRESADOS EN UNA TABLA

SELECT * FROM ALUMNO;

--PARA CONFIRMAR CAMBIOS DE LOS REGISTROS INSERTADOS

COMMIT;

INSERT INTO ALUMNO VALUES(2,'STEPHANY','23/10/1997','FEMENINO','8° SEMESTRE', 1);
INSERT INTO ALUMNO VALUES(3,'JUAN','10/10/1997','MASCULINO','8° SEMESTRE', 1);
INSERT INTO ALUMNO VALUES(4,'LUIS','04/01/1998','MASCULINO','8° SEMESTRE', 1);
INSERT INTO ALUMNO VALUES(5,'GABRIELA','13/11/1997','FEMENINO','8° SEMESTRE', 1);


--BORRAR UN REGISTRO ESPECIFICANDO UN CAMPO A COINCIDIR

DELETE FROM ALUMNO  WHERE ID_ALUMNO=5;

DESCRIBE CARRERAS;


INSERT INTO CARRERAS VALUES(1,'ING EN SISTEMAS',8,'EXACTAS',400,9000);
INSERT INTO CARRERAS VALUES(2,'MEDICINA',10,'BIOLOGICOS',350,9000);
INSERT INTO CARRERAS VALUES(3,'NUTRICION',8,'BIOLOGICOS',300,7000);
INSERT INTO CARRERAS VALUES(4,'MERCADOTECNIA',8,'ADMINISTRATIVAS',320,6000);
INSERT INTO CARRERAS VALUES(5,'DERECHO',8,'HUMANIDADES',400,7500);


COMMIT;

SELECT * FROM CARRERAS;


--INSERTAR DATOS EN LA TABLA RELACIONAL
DESCRIBE CARRERAS_ALUMNOS;

INSERT INTO CARRERAS_ALUMNOS VALUES(1,1,2);
INSERT INTO CARRERAS_ALUMNOS VALUES(2,2,1);
INSERT INTO CARRERAS_ALUMNOS VALUES(3,3,4);
INSERT INTO CARRERAS_ALUMNOS VALUES(4,5,3);
INSERT INTO CARRERAS_ALUMNOS VALUES(5,4,5);

SELECT * FROM CARRERAS_ALUMNOS;

commit;

--EJERCICIO 
--CREAR UNA TABLA LLAMADA TUTORES
--ID DEL TUTOR, NOMBRE, SEXO, TELEFONO, CLAVE DEL TUTOR
--RESTRICCION SU CLAVE SOLO PUEDE SER (A,B,C,D)
-- INSERTAR 5 REGISTROS

--CREAR TABLA RELACIONAL ALUMNO_TUTORES
--ID DE LA TABLA
-- ID_ALUMNO (LLAVE FORANEA)
--ID_TUTOR (LLAVE FORANEA)
--INSERTAR 5 REGISTROS

CREATE TABLE TUTORES(
ID_TUTOR NUMBER PRIMARY KEY,
NOMBRE NVARCHAR2(20),
SEXO NVARCHAR2(10),
TELEFONO NVARCHAR2(12),
CVE_TUTOR NVARCHAR2(1)
);

ALTER TABLE TUTORES ADD CONSTRAINT CHECK_CLAVES_TUTORES
CHECK (CVE_TUTOR IN('A','B','C','D'));

INSERT INTO TUTORES VALUES(1,'MAURICIO','MASCULINO','2281540920','A');
INSERT INTO TUTORES VALUES(2,'JULIO','MASCULINO','2283456290','C');
INSERT INTO TUTORES VALUES(3,'LETICIA','FEMENINO','2299675432','A');
INSERT INTO TUTORES VALUES(4,'ROBERTO','MASCULINO','274560987','D');
INSERT INTO TUTORES VALUES(5,'GRACIELA','FEMENINO','2798276654','B');


SELECT * FROM TUTORES;

CREATE TABLE ALUMNOS_TUTORES(
ID_AT NUMBER PRIMARY KEY,
ID_ALUMNO NUMBER,
ID_TUTOR NUMBER
);

ALTER TABLE ALUMNOS_TUTORES ADD CONSTRAINT FK_ID_ALUMNO_AT
FOREIGN KEY (ID_ALUMNO)
REFERENCES ALUMNO (ID_ALUMNO);

ALTER TABLE ALUMNOS_TUTORES ADD CONSTRAINT FK_ID_TUTOR
FOREIGN KEY(ID_TUTOR)
REFERENCES TUTORES (ID_TUTOR);

INSERT INTO ALUMNOS_TUTORES VALUES( 1,1,3);
INSERT INTO ALUMNOS_TUTORES VALUES( 2,2,5);
INSERT INTO ALUMNOS_TUTORES VALUES( 3,3,4);
INSERT INTO ALUMNOS_TUTORES VALUES( 4,4,2);
INSERT INTO ALUMNOS_TUTORES VALUES( 5,5,1);

SELECT * FROM ALUMNOS_TUTORES;

COMMIT;

-- EMPLEAR SECUENCIAS
-- CREAR SECUENCIAS
-- SE EMPLEAN PARA GENERAR VALORES DE NUMEROS ENTEROS, PUEDEN SER CONSECUTIVOS
-- O CON UN INCREMENTO QUE NOSOTROS INDIQUEMOS
--SE UTILIZA PARA GENERAR AUTOMATICAMENTE UNA SECUENCIA EN LOS VALORES DE LAS LLAVES PRIMARIAS
-- Y ASI ASEGURARNOS QUE LOS VALORES NO SE REPITAN

--CREANDO SECUENCIA DEFINIENDO LOS VALORES
CREATE SEQUENCE ALUMNO_SEQ 
START WITH 6
INCREMENT BY 1
MAXVALUE 999
MINVALUE 1
CYCLE; -- INDICAMOS SI LA SECUENCIA SE REPITE O NO (NOCYCLE)

SELECT * FROM ALUMNO;

--TRIGGER (DISPARADOR)
--EJECUTAR O DESENCADENAR UNA ACCION

CREATE TRIGGER INSERT_ALUMNO -- CREAMOS EL TRIGGER Y SU NOMBRE
BEFORE INSERT ON ALUMNO FOR EACH ROW BEGIN -- DONDE SE EJECUTA EL TRIGGER
SELECT ALUMNO_SEQ.NEXTVAL INTO:NEW.ID_ALUMNO FROM DUAL; --SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

DESCRIBE ALUMNO;

--INSERTAMOS UN NUEVO REGISTRO Y EN EL ID_ALUMNO PODEMOS PONER UN VALOR REPETIDO
-- EL TRIGGER ACTIVARA LA SECUENCIA Y LE ASIGNARA UN VALOR CONSECUTIVO AL ID_ALUMNO
INSERT INTO ALUMNO VALUES(
1,'ALEJANDRO','14/03/1990','MASCULINO','8° SEMESTRE',1);



SELECT * FROM ALUMNO;

COMMIT;

-- PARA PRUEBA BORRAMOS LA TABLA ALUMNOS_TUTORES Y LA CREAMOS NUEVAMENTE,
-- LE CREAMOS UNA SECUENCIA Y UN TRIGGER PARA ID_AT, LE ASIGNAMOS NUEVAMENTE
--LLAVES FORANEAS
DROP TABLE ALUMNOS_TUTORES;


CREATE SEQUENCE ALUMNOS_TUTORES_SEQ;

CREATE TRIGGER INSERT_ALUMNOS_TUTORES
BEFORE INSERT ON ALUMNOS_TUTORES FOR EACH ROW BEGIN
SELECT ALUMNOS_TUTORES_SEQ.NEXTVAL INTO:NEW.ID_AT FROM DUAL;
END;

--INSERTAMOS NUEVAMENTE LOS REGISTROS Y EN ID_AT PODEMOS REPETIR EL VALOR
-- YA QUE EL TRIGGER ACTIVA LA SECUENCIA Y ESTA LE ASIGNARA UN VALOR CONSECUTIVO
-- A COMO VAYAMOS INSERTANDOLOS
INSERT INTO ALUMNOS_TUTORES VALUES( 1,1,3);
INSERT INTO ALUMNOS_TUTORES VALUES( 1,2,5);
INSERT INTO ALUMNOS_TUTORES VALUES( 1,3,4);
INSERT INTO ALUMNOS_TUTORES VALUES( 1,4,2);
INSERT INTO ALUMNOS_TUTORES VALUES( 1,5,1);

SELECT * FROM ALUMNOS_TUTORES;
COMMIT;

DELETE FROM ALUMNOS_TUTORES WHERE ID_AT=5;

INSERT INTO ALUMNOS_TUTORES (ID_ALUMNO, ID_TUTOR) VALUES(5,1);

--OTRA FORMA DE INSERCION MASIVA
INSERT ALL
INTO ALUMNO (NOMBRE,FECHANAC,SEXO,SEMESTRE,STATUS) VALUES(
'GABRIELA','23/10/1997','FEMENINO','8° SEMESTRE', 1)
INTO ALUMNO (NOMBRE,FECHANAC,SEXO,SEMESTRE,STATUS) VALUES(
'ITZEL','23/09/1991','FEMENINO','8° SEMESTRE', 1)
INTO ALUMNO (NOMBRE,FECHANAC,SEXO,SEMESTRE,STATUS) VALUES(
'MARIO','02/07/1999','FMASCULINO','8° SEMESTRE', 1)
INTO ALUMNO (NOMBRE,FECHANAC,SEXO,SEMESTRE,STATUS) VALUES(
'ANDRES','12/10/1993','MASCULINO','8° SEMESTRE', 1)
INTO ALUMNO (NOMBRE,FECHANAC,SEXO,SEMESTRE,STATUS) VALUES(
'MARTIN','23/02/1998','MASCULINO','8° SEMESTRE', 1)
SELECT * FROM DUAL;


SELECT * FROM ALUMNO ORDER BY ID_ALUMNO;

COMMIT;

-----------------------------------------------------------
--EJERCICIO 2
-----------------------------------------------------------

--SE CREA TABLA DE CLIENTES
CREATE TABLE CLIENTES(
DNI_CLI NUMBER PRIMARY KEY,
NOMBRE_CLI NVARCHAR2(20),
DIRECCION_CLI NVARCHAR2(30),
TEL_CLI NVARCHAR2(12)
);

--SE CREA TABLA DE PROCURADORES
CREATE TABLE PROCURADORES(
CVE_PROC NUMBER PRIMARY KEY,
NOMBRE_PROC NVARCHAR2(20),
DIRECCION_PROC NVARCHAR2(30),
TELEFONO NVARCHAR2(12)
);

-- SE CREA TABLA DE ASUNTOS
CREATE TABLE ASUNTOS(
N_EXP NUMBER PRIMARY KEY,
FECHA_INI DATE,
FECHA_FIN DATE,
STATUS NVARCHAR2(20),
ID_CLIENTE NUMBER,
ID_PROCURADOR NUMBER,
CONSTRAINT ID_CLIENTE 
FOREIGN KEY (ID_CLIENTE) 
REFERENCES CLIENTES (DNI_CLI)
);


-- SE CREA TABLA AUXILIAR PARA RELACIONAR LOS ASUNTOS CON LOS PROCURADORES
CREATE TABLE ASUNTOS_PROC(
ID_RELACION NUMBER,
ID_PROC NUMBER,
ID_ASUNTO,
CONSTRAINT FK_ID_PROC
FOREIGN KEY (ID_PROC)
REFERENCES PROCURADORES(CVE_PROC),
CONSTRAINT FK_ID_ASUNTO
FOREIGN KEY (ID_ASUNTO)
REFERENCES ASUNTOS(N_EXP)
);

CREATE SEQUENCE ASUNTOS_SEQ;
CREATE SEQUENCE CLIENTES_SEQ;
CREATE SEQUENCE PROCURADORES_SEQ;
CREATE SEQUENCE ASUNTOS_PROC_SEQ;

CREATE TRIGGER INSERT_ASUNTOS_EXP
BEFORE INSERT ON ASUNTOS FOR EACH ROW BEGIN
SELECT ASUNTOS_SEQ.NEXTVAL INTO:NEW.N_EXP FROM DUAL;
END;

CREATE TRIGGER INSERT_CLIENTES_DNI
BEFORE INSERT ON CLIENTES FOR EACH ROW BEGIN
SELECT CLIENTES_SEQ.NEXTVAL INTO:NEW.DNI_CLI FROM DUAL;
END;

CREATE TRIGGER INSERT_PROCURADORES_CVE
BEFORE INSERT ON PROCURADORES FOR EACH ROW BEGIN
SELECT PROCURADORES_SEQ.NEXTVAL INTO:NEW.CVE_PROC FROM DUAL;
END;

CREATE TRIGGER INSERT_ASUNTOS_PROC_ID
BEFORE INSERT ON ASUNTOS_PROC FOR EACH ROW BEGIN
SELECT ASUNTOS_PROC_SEQ.NEXTVAL INTO:NEW.ID_RELACION FROM DUAL;
END;




-- INSERTAMOS REGISTROS EN LA TABLA DE CLIENTES
DESCRIBE CLIENTES;

INSERT ALL
INTO CLIENTES (NOMBRE_CLI,DIRECCION_CLI,TEL_CLI)
VALUES('JUAN PEREZ','JUAREZ 101','5514251634')
INTO CLIENTES (NOMBRE_CLI,DIRECCION_CLI,TEL_CLI)
VALUES('JOSE DOMINGUEZ','HIDALGO 20','2288905656')
INTO CLIENTES (NOMBRE_CLI,DIRECCION_CLI,TEL_CLI)
VALUES('NORBERTO CARRILLO','JUAN ESCUTIA 201','2281675432')
INTO CLIENTES (NOMBRE_CLI,DIRECCION_CLI,TEL_CLI)
VALUES('LUISA BAEZ','REFORMA 404','5534769823')
INTO CLIENTES (NOMBRE_CLI,DIRECCION_CLI,TEL_CLI)
VALUES('ROGELIO ROSADO','AMERICAS 1301','2288535644')
INTO CLIENTES (NOMBRE_CLI,DIRECCION_CLI,TEL_CLI)
VALUES('GUILLERMO SOSA','CLAVIJERO 809','2288795634')
SELECT * FROM DUAL;


--INSERTAMOS REGISTROS EN LA TABLA DE PROCURADORES
DESCRIBE PROCURADORES;
INSERT ALL
INTO PROCURADORES (NOMBRE_PROC,DIRECCION_PROC, TELEFONO)
VALUES('JULIAN VIVEROS','HIDALGO 10','2281674534')
INTO PROCURADORES (NOMBRE_PROC,DIRECCION_PROC, TELEFONO)
VALUES('VERONICA VIVEROS','HIDALGO 12','2282786523')
INTO PROCURADORES (NOMBRE_PROC,DIRECCION_PROC, TELEFONO)
VALUES('JUAN SOTO','MEXICO 84','2283124412')
INTO PROCURADORES (NOMBRE_PROC,DIRECCION_PROC, TELEFONO)
VALUES('NESTOR MURRIETA','INSURGENTES 1401','2282454647')
INTO PROCURADORES (NOMBRE_PROC,DIRECCION_PROC, TELEFONO)
VALUES('ABIGAIL JUAREZ','AV XALAPA 22','2281898687')
INTO PROCURADORES (NOMBRE_PROC,DIRECCION_PROC, TELEFONO)
VALUES('ROBERTO SANTOS','LAZARO CARDENAS 500','2281918273')
SELECT * FROM DUAL;

SELECT * FROM PROCURADORES;

COMMIT;

--INSERTAMOS REGISTROS EN LA TABLA DE ASUNTOS
DESCRIBE ASUNTOS;
INSERT ALL
INTO ASUNTOS (FECHA_INI,FECHA_FIN,STATUS,ID_CLIENTE)
VALUES('20/08/2021','12/07/2022','ARCHIVADO',1)
INTO ASUNTOS (FECHA_INI,FECHA_FIN,STATUS,ID_CLIENTE)
VALUES('17/10/2021','12/07/2022','ARCHIVADO',1)
INTO ASUNTOS (FECHA_INI,FECHA_FIN,STATUS,ID_CLIENTE)
VALUES('13/10/2021','12/07/2022','ARCHIVADO',2)
INTO ASUNTOS (FECHA_INI,FECHA_FIN,STATUS,ID_CLIENTE)
VALUES('03/04/2022','12/10/2022','ARCHIVADO',3)
INTO ASUNTOS (FECHA_INI,FECHA_FIN,STATUS,ID_CLIENTE)
VALUES('12/08/2022',NULL,'EN TRAMITE',4)
INTO ASUNTOS (FECHA_INI,FECHA_FIN,STATUS,ID_CLIENTE)
VALUES('20/11/2022',NULL,'EN TRAMITE',5)
SELECT * FROM DUAL;



--INSERTAMOS REGISTROS EN LA TABLA ASUNTOS_PROC
-- ESTA TABLA REALIZA LA RELACION DE ASUNTOS CON EL PROCURADOR ASIGNADO



SELECT * FROM ASUNTOS;

COMMIT;

--------------------------------------------------------
--EJERCICIO 3
--------------------------------------------------------

--TABLA SOCIOS
CREATE TABLE SOCIOS(
ID_SOCIO NUMBER PRIMARY KEY,
NOMBRE_SOCIO NVARCHAR2(20),
DIRECCION_SOC NVARCHAR2(30),
RFC_SOCIO NVARCHAR2(13),
TELEFONO_SOC NVARCHAR2(12),
EMAIL_SOC NVARCHAR2(20)
);


--TABLA BARCOS
CREATE TABLE BARCOS(
ID_BARCO NUMBER PRIMARY KEY,
MATRICULA NVARCHAR2(20),
NOMBRE_BARCO NVARCHAR2(20),
NUM_AMARRE NUMBER,
CUOTA NUMBER
);

--TABLA RELACIONAL SOCIO_BARCO
--ESTA TABLA SE PUEDE OMITIR Y AGREGAR A BARCOS UNA FK DE SOCIOS 
--YA QUE LA RELACION ES 1:N ENTRE SOCIO:BARCO
CREATE TABLE SOCIO_BARCO(
ID_SOC_BARCO NUMBER PRIMARY KEY,
ID_SOC NUMBER,
ID_BARCO NUMBER,
CONSTRAINT FK_ID_SOCIO
FOREIGN KEY (ID_SOC)
REFERENCES SOCIOS(ID_SOCIO),
CONSTRAINT FK_ID_BARCO
FOREIGN KEY (ID_BARCO)
REFERENCES BARCOS(ID_BARCO)
);

--TABLA PATRONES (CAPITANES)
CREATE TABLE PATRONES(
ID_PATRON NUMBER PRIMARY KEY,
NOMBRE_PATRON NVARCHAR2(20),
DIRECCION_PATRON NVARCHAR2(30),
TEL_PATRON NVARCHAR2(12)
);


--TABLA DE SALIDAS
--LLEVA FK YA QUE SU RELACION ES 1:N ENTRE BARCO:SALIDAS Y 1:N ENTRE PATRON:SALIDA
CREATE TABLE SALIDAS(
ID_SALIDA NUMBER PRIMARY KEY,
FECHA_SAL DATE,
DESTINO NVARCHAR2(20),
ID_PATRON NUMBER,
ID_BARCO NUMBER,
CONSTRAINT FK_ID_BARCO2
FOREIGN KEY (ID_BARCO)
REFERENCES BARCOS(ID_BARCO),
CONSTRAINT FK_ID_PATRON
FOREIGN KEY (ID_PATRON)
REFERENCES PATRONES(ID_PATRON)
);

CREATE SEQUENCE ID_SOCIO_SEQ;
CREATE SEQUENCE ID_BARCO_SEQ;
CREATE SEQUENCE ID_SOCIO_BARCO_SEQ;
CREATE SEQUENCE ID_PATRON_SEQ;

DESCRIBE SOCIOS;

--INSERTAR DATOS
--SOCIOS
INSERT INTO SOCIOS VALUES(
ID_SOCIO_SEQ.NEXTVAL,'JUAN PEREZ','HIDALGO 1','PEJJ897812RG4','2288676767','SOCIO1@GMAIL.COM');

INSERT INTO SOCIOS VALUES(
ID_SOCIO_SEQ.NEXTVAL,'JOSE SOSA','JUAREZ 20','SOJJ907856RF2','2286894682','SOCIO2@GMAIL.COM');
INSERT INTO SOCIOS VALUES(
ID_SOCIO_SEQ.NEXTVAL,'PEDRO RUIZ','CALLE 3 #44','RUHP876543RR4','2286891928','SOCIO3@GMAIL.COM');
INSERT INTO SOCIOS VALUES(
ID_SOCIO_SEQ.NEXTVAL,'ABIGAIL MOTA','INSURGENTES 405','MOGA674523PL9','2286896745','SOCIO4@GMAIL.COM');
INSERT INTO SOCIOS VALUES(
ID_SOCIO_SEQ.NEXTVAL,'RICARDO VALENCIA','MORELOS 21','VAFR560912PL4','2286899078','SOCIO5@GMAIL.COM');
INSERT INTO SOCIOS VALUES(
ID_SOCIO_SEQ.NEXTVAL,'ESTEBAN HERNANDEZ','ITURBIDE 100','HERE781221TH6','2286812345','SOCIO6@GMAIL.COM');

SELECT * FROM SOCIOS;

--BARCOS
INSERT INTO BARCOS VALUES(
ID_BARCO_SEQ.NEXTVAL,'12345','POSEIDON',3,300);

INSERT INTO BARCOS VALUES(
ID_BARCO_SEQ.NEXTVAL,'13425','LA SIRENA',1,400);
INSERT INTO BARCOS VALUES(
ID_BARCO_SEQ.NEXTVAL,'90786','MARIA LUISA',4,300);
INSERT INTO BARCOS VALUES(
ID_BARCO_SEQ.NEXTVAL,'167453','LA NIÑA',2,350);

SELECT * FROM BARCOS;

--BARCOS_SOCIOS
DESCRIBE SOCIO_BARCO;

INSERT INTO SOCIO_BARCO VALUES(ID_SOCIO_BARCO_SEQ.NEXTVAL, 6,3);
INSERT INTO SOCIO_BARCO VALUES(ID_SOCIO_BARCO_SEQ.NEXTVAL, 1,1);
INSERT INTO SOCIO_BARCO VALUES(ID_SOCIO_BARCO_SEQ.NEXTVAL, 1,2);
INSERT INTO SOCIO_BARCO VALUES(ID_SOCIO_BARCO_SEQ.NEXTVAL, 3,3);
INSERT INTO SOCIO_BARCO VALUES(ID_SOCIO_BARCO_SEQ.NEXTVAL, 4,4);

SELECT * FROM SOCIO_BARCO;


--PATRONES
DESCRIBE PATRONES;

INSERT INTO PATRONES VALUES(ID_PATRON_SEQ.NEXTVAL,'PEDRO RUMILLA','MELCHOR OCAMPO 10','1111111111');
INSERT INTO PATRONES VALUES(ID_PATRON_SEQ.NEXTVAL,'JULIAN ESCOBEDO','ZARAGOZA 110','2222222222');
INSERT INTO PATRONES VALUES(ID_PATRON_SEQ.NEXTVAL,'RUBEN PALMA','5 DE MAYO 20','3333333333');

SELECT * FROM PATRONES;


--SALIDAS
DESCRIBE SALIDAS;

CREATE SEQUENCE ID_SALIDA_SEQ;
INSERT INTO SALIDAS VALUES(ID_SALIDA_SEQ.NEXTVAL,'13/01/2023','COZUMEL',1,2);
INSERT INTO SALIDAS VALUES(ID_SALIDA_SEQ.NEXTVAL,'19/01/2023','ISLA MUJERES',2,1);
INSERT INTO SALIDAS VALUES(ID_SALIDA_SEQ.NEXTVAL,'15/02/2023','HOLBOX',3,3);

COMMIT;


-----------------------------------------------------------------------------------
--EJERCICIO AEROLINEA

--ENTIDADES FUERTES

