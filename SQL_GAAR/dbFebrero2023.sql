-- Con dos guiones puedo poner un comentario

/* Podemos poner comentarios de multiples líneas
SQL - Lenguaje de consulta estructuradac(Structured Query Language)
Es un lenguaje para actualizar, obtener y calcular información en
bases de datos relacionales

Base de datos - Conjunto de datos organizados y relacionados entre sí
y que son almacenados en tablas

*/

/*La estructura de las tablas queda de la siguiente manera

- Toda tabla debe llevar una llave primaria
(Id o un número que identifique cada registro de la misma)
- Pueden llevar también llaves foraneas.
- Una llave foranea es la llave primaria que proviene de otra tabla
- Tipo de dato - pueden ser numéricos, caracteres, tipo fecha, etc.

Caracter - Char, Varchar, Varchar2, Nchar, NVARCHAR2
Numericos - long, int, NUMBER 

*/

-- CREAR UNA TABLA DE EJEMPLO
-- ALMACENAR DATOS DE UNA PERSONA

-- ID DE LA PERSONA
-- NOMBRE
-- EDAD
-- SEXO


-- Creando la tabla para PERSONA
-- La sintaxis para crear una tabla es la siguiente:
-- CREATE TABLE NOMBREDELATABLA(
-- NOMBRECAMPO1 TIPODEDATO,
-- .........
-- NOMBRECAMPOFINAL TIPODEDATO
-- );
--SELECCIONAMOS LA SENTENCIA Y DAMOS CTRL + ENTER
CREATE TABLE PERSONA(
INE NUMBER PRIMARY KEY,
NOMBRE NVARCHAR2(20),
EDAD NUMBER,
SEXO NVARCHAR2(1)
);

-- PARA VER LA ESTRUCTURA DE UNA TABLA UTILIZAMOS LA SIGUIENTE SENTENCIA
DESCRIBE PERSONA;

-- PARA GUARDAR EL SCRIPT 
-- UTILIZAN CTRL + S


-- BORRAR O ELIMINAR UNA RESTRICCION EN UNA TABLA

ALTER TABLE ALUMNO DROP CONSTRAINT CHECK_SEXO;

ALTER TABLE ALUMNO ADD CONSTRAINT CHECK_SEXO
CHECK (SEXO IN('MASCULINO','FEMENINO'));


-- CREAR OTRA RESTRICCION EN LA TABLA CARRERAS
-- PARA NO REPETIR VALORES
-- UNIQUE, para agregar una restricción única en un registro

ALTER TABLE CARRERAS ADD CONSTRAINT UNQ_NOMBRE_CARRERA
UNIQUE (NOMBRE);

-- AGREGANDO UNA LLAVE FORANEA
-- una llave foranea también es una restriccion, porque
-- vamos a especificar de donde proviene dicha llave

-- Sintaxis general

--ALTER TABLE NOMBREDELATABLA ADD CONSTRAINT NOMBREDELARESTRICCION
-- FOREIGN KEY (COLUMNA QUE RECIBE) -- QUIEN RECIBE
-- REFERENCES NOMBREDELATABLA (COLUMNA CON LLAVE PRIMARIA); -- QUIEN DA

ALTER TABLE CARRERAS_ALUMNOS ADD CONSTRAINT FK_ID_ALUMNO
FOREIGN KEY (ID_ALUMNO)
REFERENCES ALUMNO (ID_ALUMNO);

-- CREAR LA LLAVE FORANEA DE ID_CARRERA

ALTER TABLE CARRERAS_ALUMNOS ADD CONSTRAINT FK_ID_CARRERA
FOREIGN KEY (ID_CARRERA)
REFERENCES CARRERAS (ID_CARRERA);

DESCRIBE CARRERAS;

-- AGREGAR UNA COLUMNA A UNA TABLA EXISTENTE

ALTER TABLE CARRERAS ADD PRESUPUESTO NUMBER;

-- ELIMINAR UNA COLUMNA DE UNA TABLA EXISTENTE
ALTER TABLE CARRERAS DROP COLUMN PRESUPUESTO;

ALTER TABLE CARRERAS ADD PRESUPUESTO NUMBER (6,2);
--podemos indicar el uso de decimales. Indicano la longitud numerica
-- y separamos con una coma, cuantas posiciones serían decimales
-- quedando en el ejemplo anterior un valor maximo entero de 9,999 y
-- un decimal de .99

-- RENOMBRAR UNA COLUMNA
ALTER TABLE CARRERAS RENAME COLUMN PRESUPUESTO TO PRESUPUESTO_MENSUAL;

DESCRIBE CARRERAS;

--MODIFICAR EL TIPO DE DATO DE LA COLUMNA (SIEMPRE Y CUANDO NO TENGA
--DATOS INSERTADOS)

ALTER TABLE CARRERAS MODIFY PRESUPUESTO_MENSUAL NVARCHAR2(10);

ALTER TABLE CARRERAS MODIFY PRESUPUESTO_MENSUAL NUMBER(6,2);

-- INSERCION DE DATOS INDIVIDUALES

DESCRIBE ALUMNO;

INSERT INTO ALUMNO VALUES
(1,'EDUARDO','13/10/1990','MASCULINO','8o SEMESTRE',1);
INSERT INTO ALUMNO VALUES
(2,'STEPHANY','23/10/1997','FEMENINO','8o SEMESTRE',1);
INSERT INTO ALUMNO VALUES
(3,'JUAN','10/10/1997','MASCULINO','8o SEMESTRE',1);
INSERT INTO ALUMNO VALUES
(4,'LUIS','4/01/1998','MASCULINO','8o SEMESTRE',1);
INSERT INTO ALUMNO VALUES
(5,'GABRIELA','13/10/1990','FEMENINO','8o SEMESTRE',1);
-- conocer que formato de fecha maneja el sistema
SELECT SYSDATE FROM DUAL;

--------------------------------------------------------------

-- REALIZANDO UNA CONSULTA GENERAL DE LOS DATOS INGRESADOS
-- EN UNA TABLA

SELECT * FROM ALUMNO;

-- PARA CONFIRMAR CAMBIOS DE LOS REGISTROS QUE INSERTAMOS
-- (GUARDAR)

COMMIT;

-- BORRAR UN REGISTRO ESPECIFICANDO UN CAMPO A COINCIDIR
-- CON EL REGISTRO

DELETE FROM ALUMNO WHERE ID_ALUMNO=5;

SELECT * FROM ALUMNO;

DESCRIBE CARRERAS;

-- INSERCIÓN DE DATOS EN LA TABLA CARRERAS

INSERT INTO CARRERAS VALUES
(1,'ING EN SISTEMAS',8,'EXACTAS',400,9000);
INSERT INTO CARRERAS VALUES
(2,'MEDICINA',10,'BIOLOGICO',400,9500);
INSERT INTO CARRERAS VALUES
(3,'NUTRICION',8,'BIOLOGICOS',350,8000);
INSERT INTO CARRERAS VALUES
(4,'MERCADOTECNIA',8,'ADMITRISTATIVA',300,8000);
INSERT INTO CARRERAS VALUES
(5,'DERECHO',8,'HUMANIDADES',300,8000);

SELECT * FROM CARRERAS;

COMMIT;

SELECT * FROM CARRERAS_ALUMNOS;

DESCRIBE CARRERAS_ALUMNOS;

INSERT INTO CARRERAS_ALUMNOS VALUES (1,1,2);
INSERT INTO CARRERAS_ALUMNOS VALUES (2,2,1);
INSERT INTO CARRERAS_ALUMNOS VALUES (4,5,3);
INSERT INTO CARRERAS_ALUMNOS VALUES (5,5,3);


SELECT * FROM ALUMNO;
SELECT * FROM CARRERAS;
SELECT * FROM CARRERAS_ALUMNOS;

-- EJERCICIO
-- CREAR UNA TABLA LLAMADA TUTORES
-- ID_TUTOR, NOMBRE, SEXO, TELEFONO, CLAVE DEL TUTOR
-- RESTRICCION EN LA CLAVE DEL TUTOR (A,B,C,D)
-- INSERTAR 5 REGISTROS

-- CREAR UNA TABLA RELACIONAL ALUMNO_TUTORES
-- ID DE LA TABLA
-- ID_ALUMNO
--ID_TUTOR
-- INSERTAR 5 REGISTROS

CREATE TABLE TUTORES(
ID_TUTOR NUMBER PRIMARY KEY,
NOMBRE NVARCHAR2(30),
SEXO NVARCHAR2(20),
TELEFONO NVARCHAR2(10),
CLAVE NVARCHAR2(1),
CONSTRAINT CHECK_CLAVE CHECK
(CLAVE IN ('A','B','C','D'))
);

CREATE TABLE ALUMNOS_TUTORES(
ID_AT NUMBER PRIMARY KEY,
ID_ALUMNO NUMBER,
ID_TUTOR NUMBER,
CONSTRAINT FK_IDALUMNO
FOREIGN KEY (ID_ALUMNO)
REFERENCES ALUMNO (ID_ALUMNO),
CONSTRAINT FK_IDTUTORES
FOREIGN KEY (ID_TUTOR)
REFERENCES TUTORES (ID_TUTOR)
);

INSERT INTO TUTORES VALUES (1,'ALEX', 'MASCULINO', '2226781900','A');
INSERT INTO TUTORES VALUES (2,'ALEXA', 'FEMENINO', '2226781900','B');
INSERT INTO TUTORES VALUES (3,'MARIA', 'FEMENINO', '2226781900','C');

INSERT INTO ALUMNOS_TUTORES VALUES (1,1,3);
INSERT INTO ALUMNOS_TUTORES VALUES (2,2,1);
INSERT INTO ALUMNOS_TUTORES VALUES (3,3,2);

SELECT * FROM TUTORES;
SELECT * FROM ALUMNOS_TUTORES;

-- EMPLEAR SECUENCIAS
-- CREAR SECUENCIAS
-- Se emplean para generar valores de numeros enteros
-- Pueden ser consecutivos
-- o con un incremento que nosotros indiquemos
-- Se utiliza para generar automaticamente una secuencia en los valores
-- de las llaves primarias
-- y asi asegurarnos que los valores no se repitan

-- CREANDO UNA SECUENCIA DEFINIENDO LOS VALORES
CREATE SEQUENCE ALUMNO_SEQ -- CREAMOS LA SECUENCIA Y SU NOMBRE
START WITH 5 -- INDICAMOS EL VALOR EN EL QUE INICIA LA SECUENCIA
INCREMENT BY 1 -- INCREMENTAMOS EL VALOR DE LA SECUENCIA COMO SE LE INDIQUE
MAXVALUE 999 -- INDICAMOS EL VALOR MAXIMO DE LA SECUENCIA
MINVALUE 1 -- INDICAMOS EL VALOR MINIMO DE LA SECUENCIA
CYCLE; -- INDICAMOS SI LA SECUENCIA SE REPITE O NO (NOCYCLE)

-- TRIGGER (DISPARADOR)
-- Ejecutar o desencadenar una accion

CREATE TRIGGER INSERT_ALUMNO -- CREAMOS EL TRIGGER Y SU NOMBRE
BEFORE INSERT ON ALUMNO FOR EACH ROW BEGIN -- DONDE SE EJECUTA EL TRIGGER
SELECT ALUMNO_SEQ.NEXTVAL INTO:NEW.ID_ALUMNO FROM DUAL; -- SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

-- ELIMINAR UN TRIGGER
DROP TRIGGER INSERT_ALUMNO;

DESCRIBE ALUMNO;

INSERT INTO ALUMNO VALUES
(1, 'GERARDO', '14/03/1990', 'MASCULINO', '8o SEMESTRE',1);

SELECT * FROM ALUMNO;

SELECT * FROM ALUMNOS_TUTORES;

DROP TABLE ALUMNOS_TUTORES;

-- CREAR UNA SECUENCIA CON VALORES POR DEFAULT

CREATE SEQUENCE ALUMNOS_TUTORES_SEQ;

CREATE TRIGGER INSERT_ALUMNO_TUTORES -- CREAMOS EL TRIGGER Y SU NOMBRE
BEFORE INSERT ON ALUMNOS_TUTORES FOR EACH ROW BEGIN -- DONDE SE EJECUTA EL TRIGGER
SELECT ALUMNOS_TUTORES_SEQ.NEXTVAL INTO:NEW.ID_AT FROM DUAL; -- SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

DROP TRIGGER INSERT_ALUMNO_TUTORES;

SELECT * FROM ALUMNOS_TUTORES;

INSERT INTO ALUMNOS_TUTORES (ID_ALUMNO, ID_TUTOR) VALUES (1,2);

------------------------------------------------------------------
-- EJERCICIO 3

-- EJERCICIO 3

--ENTIDAD FUERTE
CREATE TABLE SOCIO(
ID_SOCIO NUMBER PRIMARY KEY,
NOMBRE NVARCHAR2(30),
DIRECCION NVARCHAR2 (30),
TELEFONO NVARCHAR2(10)
);

CREATE SEQUENCE SOCIO_SEQ;

CREATE TRIGGER INSERT_SOCIO
BEFORE INSERT ON SOCIO FOR EACH ROW BEGIN
SELECT SOCIO_SEQ.NEXTVAL INTO:NEW.ID_SOCIO FROM DUAL;
END;

--ENTIDAD FUERTE
CREATE TABLE BARCO(
ID_BARCO NUMBER PRIMARY KEY,
NOMBRE NVARCHAR2(30),
NUM_AMARRE NUMBER,
CUOTA NUMBER (6,2)
);

CREATE SEQUENCE BARCO_SEQ;

CREATE TRIGGER INSERT_BARCO
BEFORE INSERT ON BARCO FOR EACH ROW BEGIN
SELECT BARCO_SEQ.NEXTVAL INTO:NEW.ID_BARCO FROM DUAL;
END;

-- ENTIDAD FUERTE
CREATE TABLE PATRON(
ID_PATRON NUMBER PRIMARY KEY,
NOMBRE NVARCHAR2(30),
DIRECCION NVARCHAR2 (30),
TELEFONO NVARCHAR2(10)
);

CREATE SEQUENCE PATRON_SEQ;

CREATE TRIGGER INSERT_PATRON
BEFORE INSERT ON PATRON FOR EACH ROW BEGIN
SELECT PATRON_SEQ.NEXTVAL INTO:NEW.ID_PATRON FROM DUAL;
END;


-- ENTIDAD DEBIL
CREATE TABLE SOCIOS_BARCO(
ID_SB NUMBER PRIMARY KEY,
ID_SOCIO NUMBER,
ID_BARCO NUMBER,
CONSTRAINT FK_ID_SOCIO
FOREIGN KEY (ID_SOCIO)
REFERENCES SOCIO (ID_SOCIO),
CONSTRAINT FK_ID_BARCO
FOREIGN KEY (ID_BARCO)
REFERENCES BARCO (ID_BARCO)
);

CREATE SEQUENCE SOCIOSBARCO_SEQ;

CREATE TRIGGER INSERT_SOCIOSBARCO
BEFORE INSERT ON SOCIOS_BARCO FOR EACH ROW BEGIN
SELECT SOCIOSBARCO_SEQ.NEXTVAL INTO:NEW.ID_SB FROM DUAL;
END;

-- ENTIDAD DEBIL
CREATE TABLE SALIDAS_BARCO(
ID_SALIDA NUMBER PRIMARY KEY,
DESTINO NVARCHAR2(30),
FECHASALIDA DATE,
ID_BARCO NUMBER,
ID_PATRON NUMBER,
CONSTRAINT FK_IDBARCO
FOREIGN KEY (ID_BARCO)
REFERENCES BARCO (ID_BARCO),
CONSTRAINT FK_IDPATRON
FOREIGN KEY (ID_PATRON)
REFERENCES PATRON (ID_PATRON)
);

CREATE SEQUENCE SALIDASBARCO_SEQ;

CREATE TRIGGER INSERT_SALIDASBARCO
BEFORE INSERT ON SALIDAS_BARCO FOR EACH ROW BEGIN
SELECT SALIDASBARCO_SEQ.NEXTVAL INTO:NEW.ID_SALIDA FROM DUAL;
END;

--INSERCION DE DATOS PRIMERAMENTE EN ENTIDADES FUERTES
DESCRIBE SOCIO;

INSERT ALL
INTO SOCIO (NOMBRE, DIRECCION, TELEFONO)  VALUES ('AYLIN','XALAPA','2282330908')
INTO SOCIO (NOMBRE, DIRECCION, TELEFONO)  VALUES ('ALEX','XALAPA','2281072635')
INTO SOCIO (NOMBRE, DIRECCION, TELEFONO)  VALUES ('ALEJANDRO','CDMX','3023079497')
INTO SOCIO (NOMBRE, DIRECCION, TELEFONO)  VALUES ('EMMANUEL','CDMX','5630345103')
INTO SOCIO (NOMBRE, DIRECCION, TELEFONO)  VALUES ('EDUARDO','MORELIA','4438443145')
SELECT * FROM DUAL;

SELECT * FROM SOCIO;

INSERT ALL
INTO PATRON (NOMBRE, DIRECCION, TELEFONO)  VALUES ('ABDIEL','XALAPA','2282535827')
INTO PATRON (NOMBRE, DIRECCION, TELEFONO)  VALUES ('MARCOS','XALAPA','2283054341')
INTO PATRON (NOMBRE, DIRECCION, TELEFONO)  VALUES ('TAVO','ACAPULCO','7441198412')
INTO PATRON (NOMBRE, DIRECCION, TELEFONO)  VALUES ('AARON','XALAPA','2283443722')
INTO PATRON (NOMBRE, DIRECCION, TELEFONO)  VALUES ('CESAR','ACAPULCO','7443838589')
SELECT * FROM DUAL;

SELECT * FROM PATRON;

DESCRIBE BARCO;
INSERT ALL
INTO BARCO (NOMBRE, NUM_AMARRE, CUOTA) VALUES ('LA NI?A', 11, 800.50)
INTO BARCO (NOMBRE, NUM_AMARRE, CUOTA) VALUES ('LA PINTA', 12, 900.50)
INTO BARCO (NOMBRE, NUM_AMARRE, CUOTA) VALUES ('ST. MARIE', 13, 1000.50)
INTO BARCO (NOMBRE, NUM_AMARRE, CUOTA) VALUES ('MINI TITANIC', 14, 2000.50)
INTO BARCO (NOMBRE, NUM_AMARRE, CUOTA) VALUES ('POSEIDON', 15, 5000.50)
SELECT * FROM DUAL;

SELECT * FROM BARCO;

DESCRIBE SOCIOS_BARCO;

INSERT ALL
INTO SOCIOS_BARCO (ID_SOCIO,ID_BARCO) VALUES (1,1)
INTO SOCIOS_BARCO (ID_SOCIO,ID_BARCO) VALUES (2,2)
INTO SOCIOS_BARCO (ID_SOCIO,ID_BARCO) VALUES (3,3)
INTO SOCIOS_BARCO (ID_SOCIO,ID_BARCO) VALUES (4,4)
INTO SOCIOS_BARCO (ID_SOCIO,ID_BARCO) VALUES (5,5)
SELECT * FROM DUAL;

SELECT * FROM SOCIOS_BARCO;

DESCRIBE SALIDAS_BARCO;

INSERT ALL
INTO SALIDAS_BARCO (DESTINO,FECHASALIDA,ID_BARCO,ID_PATRON) 
VALUES ('VERACRUZ',TO_DATE('20/01/2023 01:30:00','DD-MM-YYYY HH24:MI:SS'),1,1)
INTO SALIDAS_BARCO (DESTINO,FECHASALIDA,ID_BARCO,ID_PATRON) 
VALUES ('VILLAHERMOSA',TO_DATE('21/01/2023 13:30:00','DD-MM-YYYY HH24:MI:SS'),1,1)
INTO SALIDAS_BARCO (DESTINO,FECHASALIDA,ID_BARCO,ID_PATRON) 
VALUES ('CAMPECHE',TO_DATE('22/01/2023 14:30:00','DD-MM-YYYY HH24:MI:SS'),1,1)
INTO SALIDAS_BARCO (DESTINO,FECHASALIDA,ID_BARCO,ID_PATRON) 
VALUES ('YUCATAN',TO_DATE('23/01/2023 15:30:00','DD-MM-YYYY HH24:MI:SS'),1,1)
INTO SALIDAS_BARCO (DESTINO,FECHASALIDA,ID_BARCO,ID_PATRON) 
VALUES ('CANCUN',TO_DATE('24/01/2023 16:30:00','DD-MM-YYYY HH24:MI:SS'),1,1)
SELECT * FROM DUAL;

INSERT INTO SALIDAS_BARCO (DESTINO,FECHASALIDA,ID_BARCO,ID_PATRON) 
VALUES ('COZUMEL',TO_DATE('25/01/2023 12:00:00','DD-MM-YYYY HH24:MI:SS'),1,1);

SELECT * FROM SALIDAS_BARCO;

-- CONSULTAR HORARIO Y FECHA
SELECT ID_SALIDA, DESTINO, TO_CHAR (FECHASALIDA, 'DD-MM-YYYY HH24:MI:SS') FROM SALIDAS_BARCO;

-- CONSULTA DE UNICAMENTE EL HORARIO

SELECT ID_SALIDA, DESTINO, TO_CHAR(FECHASALIDA, 'HH24:MI:SS') FROM SALIDAS_BARCO;

COMMIT;
