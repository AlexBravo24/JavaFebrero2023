-- Con dos guiones puedo poner un comentario

/* Podemos poner comentarios de
    multiples lineas

SQL - >Lenguaje de consulta estructurada (Structured Query Language)
    Es un lenguaje para actualizar, obtener y calcular informacion de una base
    de datos
    
Base de datos:
    Conjunto de datosorganizados y relacionados entre si y que son almacenados
    en tablas
    
La estructura de tablas queda de la siguiete manera
    -Toda tabla debe llevar una llave primaria PK (ID o número que identifique
        cada registro de la misma.
    -Pueden llevar llaves foraneas FK:
        La cual es la llave primaria que proviende de otra tabla.
    -Cada campo de la tabla debe de llevar un tipo de dato:-> numeros, caracter,fecha
        Tipos:
        caracter ->: char, varchar, varchar2, Nchar, NVARCHAR2
        Numericos ->: long, int, NUMBER
*/

--CREAR UNA TABLA DE EJEMPLO - PERSONA
--ID, NOMBRE, EDAD, SEXO
--SINTAXIS
/*
CREATE TABLE NOMBRETABLA(
NOMBRECAMPO TIPO,
NOMBRECAMPO2 TIPO...
);
*/
CREATE TABLE PERSONA(
    INE NUMBER PRIMARY KEY,
    NOMBRE NVARCHAR2(20),
    EDAD NUMBER,
    SEXO NVARCHAR2(1)
);

--Para ver la estrucrura de una tabla utilizamos
DESCRIBE PERSONA;

--En la base de datos hay que establecer valores de datos que no cambien 
    --en este caso edad
--Lo ideal seriaponer de ripo date y con fecha de nacimiento

--Eliminar tabla
DROP TABLE PERSONA;

--Crear tabla de ALUMNOS
--  MATRICULA
--  NOMBRE
--  FECHA_DE_NACIMIENTO
--  SEXO
--  SEMESTRE
--  STATUS (ACTIVO / INACTIVO)
CREATE TABLE ALUMNOS(
    ID_ALUMNO NUMBER PRIMARY KEY,
    NOMBRE NVARCHAR2(30),
    FECHA_DE_NACIMIENTO DATE,
    SEXO NVARCHAR2(20),
    SEMESTRE NVARCHAR2 (30),
    STATUS NUMBER
);

--Crear una tabla de CARRERAS
CREATE TABLE CARRERAS(
    ID_CARRERA NUMBER PRIMARY KEY,
    NOMBRE NVARCHAR2(30),
    DURACION_SEM NUMBER,
    AREA NVARCHAR2(30),
    CREDITOS NUMBER
);

--ENTIDADES FUERTES: No dependen de otras para existir, tienen sus datos completos
--ENTIDADES DEBILES: dependen de los datos de otras tablas (como las llaves foraneas)

--CREAR TABLA QUE NOS PERMITA RELACIONAR ALUMNOS CON LA CARRERA

CREATE TABLE CARRERAS_ALUMNOS(
    ID_CA NUMBER PRIMARY KEY,
    ID_CARRERA NUMBER,
    ID_ALUMNO NUMBER
);

--Creamos restricciones en una tabla
--Las restricciones deben llevar un nombre y se identifican por la palabra'CONSTRAINT'
--Como ejemplo vamos agregar una restriccion en el sexo en la tabla alumno del campo sexo
--para que solo podamos ingresar ´MASCULINO´O ´FEMENINO'

ALTER TABLE ALUMNOS ADD CONSTRAINT CHECK_SEXO CHECK (
    SEXO IN ('MASCULINO', 'FEMENINO')
);

--borrar o eliminar una restriccion

ALTER TABLE ALUMNOS DROP CONSTRAINT CHECK_SEXO;

--RESTRICCION PARA TABLA CARRERAS
--PARA NO REPETIR VALORES SOBRE LOS NOMBRES
--UNIQUE: Agrega una restriccion a algun campo para que sea unico
ALTER TABLE CARRERAS ADD CONSTRAINT UNQ_NOMBRE_CARRERA UNIQUE (NOMBRE);

--AGREGANDO UNA LLAVE FORANEA
--Una llave foranea tambien es una restriccion porque se especifica 
--de donde proviene dicha llave
--sintaxis general
-- ALTER TABLE NOMBRE_TABLA ADD CONSTRAINT _NOMBRE_RESTRICCION 
--FOREIGNKEY (COLUMNA QUE RECIBE)
--REFERENCES NOMBRE_TABLA(COLUMNA CON CLAVE PRIMARIA)--

ALTER TABLE CARRERAS_ALUMNOS ADD CONSTRAINT FK_ID_ALUMNO
    FOREIGN KEY (ID_ALUMNO)
    REFERENCES ALUMNOS (ID_ALUMNO);

--CREAR LA LLAVE FORANEA DE ID_CARRERA
ALTER TABLE CARRERAS_ALUMNOS ADD CONSTRAINT FK_ID_CARRERA
    FOREIGN KEY (ID_CARRERA)
    REFERENCES CARRERAS (ID_CARRERA);
    
DESCRIBE CARRERAS_ALUMNOS;

--Agregar una columna a una tabla existente

ALTER TABLE CARRERAS ADD PRESUPUESTO NUMBER;

--Eliminar una columna de una tabla 
ALTER TABLE CARRERAS DROP COLUMN PRESUPUESTO;

--indicar el numero de decimales al agregar una columna
--NUMBER(NUMERO_DE_PIGITOS, NUMERO_DE_DECIMALES) CAMPO MAX ADMITIDO 9999.99
ALTER TABLE CARRERAS ADD PRESUPUESTO NUMBER(6,2);

--RENOMBRAR UNA COLUMNA EXISTENTE
ALTER TABLE CARRERAS RENAME COLUMN PRESUPUESTO TO PRESUPUESTO_MENSUAL;

DESCRIBE CARRERAS;

--MODIFICAR TIPO DE DATO DE LAS COLUMNAS SIEMPRE Y CUANDO NO TENGA DATOS INSERTADOS
ALTER TABLE CARRERAS MODIFY PRESUPUESTO_MENSUAL NUMBER(6,2);

--insercion de datos individuales
--en tabla alumno
INSERT INTO ALUMNOS  VALUES(1, 'EDUARDO','13/10/1990','MASCULINO','8o SEMESTRE',1);

--INDICA EL FORMATO DE FECHA EN EL SISTEMA
SELECT SYSDATE FROM DUAL;

DELETE FROM alumnos WHERE ID_ALUMNO = 1;

select * from alumnos;

--REALIZABDO UNA CONSULTA GENERAL DE MIS DATOS EN UNA TABLA
SELECT * FROM ALUMNOS;

INSERT INTO ALUMNOS  VALUES(2, 'MARTIN','08/08/1994','MASCULINO','8o SEMESTRE',1);

--PARA GUARDAR LOS CAMBIOSS DE LOS REGISTROS EN LA DB SE USA COMMIT
COMMIT;

INSERT INTO ALUMNOS  VALUES(3, 'JUAN','10/10/1997','MASCULINO','8o SEMESTRE',1);
INSERT INTO ALUMNOS  VALUES(4, 'STEPHANY','23/10/1997','FEMENINO','8o SEMESTRE',1);
INSERT INTO ALUMNOS  VALUES(5, 'JOSE LUIS','04/01/1998','MASCULINO','8o SEMESTRE',1);
INSERT INTO ALUMNOS  VALUES(6, 'GABRIELA','13/10/1990','FEMENINO','8o SEMESTRE',1);

--REALIZABDO UNA CONSULTA GENERAL DE MIS DATOS EN UNA TABLA
SELECT * FROM ALUMNOS;

--BORRAR UN REGISTRO ESPECIFICO MEDIANTE UN VALOR EN ESSTE CASO EL ID_ALUMNO
DELETE FROM ALUMNOS WHERE ID_ALUMNO=2;

--AGREGAMOS EL VALOR ELIMINADO :-)
INSERT INTO ALUMNOS  VALUES(2, 'MARTIN','08/08/1994','MASCULINO','8o SEMESTRE',1);


SELECT * FROM alumnos;

DESCRIBE CARRERAS;

INSERT INTO CARRERAS VALUES(1, 'ING EN SISTEMAS', 8, 'EXACTAS', 400, 9000);
INSERT INTO CARRERAS VALUES(2, 'MEDICINA', 10, 'BIOLOGICO', 400, 9500);
INSERT INTO CARRERAS VALUES(3, 'NUTRICION', 8, 'BIOLOGICO', 350, 8000);
INSERT INTO CARRERAS VALUES(4, 'MERCADOTECNIA', 8, 'ADMINISTRATIVA', 300, 8000);
INSERT INTO CARRERAS VALUES(5, 'DERECHO', 8, 'HUMANIDADES', 300, 8000);

SELECT * FROM CARRERAS;

COMMIT;

-- INSERTAR DATOS EN NUESTRA TABLA RELACIONAL
INSERT INTO CARRERAS_ALUMNOS VALUES (1, 1, 2);
INSERT INTO CARRERAS_ALUMNOS VALUES (2, 2, 1);
INSERT INTO CARRERAS_ALUMNOS VALUES (3, 3, 6);
INSERT INTO CARRERAS_ALUMNOS VALUES (4, 3, 6);
INSERT INTO CARRERAS_ALUMNOS VALUES (5, 1, 5);

SELECT * FROM CARRERAS_ALUMNOS;

--CREAR TABLA LLAMADA TUTORES 5 REGISTROS
--ID_TUTOR 
--NOMBRE
--SEXO
--TELEFONO
--CLAVE_DEL_TUROR (A,B,C,D) 

CREATE TABLE TUTORES(
    ID_TUTOR NUMBER PRIMARY KEY,
    NOMBRE NVARCHAR2(30),
    SEXO NVARCHAR2(10),
    TELEFONO NVARCHAR2(10),
    CLAVE_TUTOR NVARCHAR2(1)
);

--AGREGAR RESTRICCIONES
ALTER TABLE TUTORES ADD CONSTRAINT CHECK_CLAVET CHECK(
    CLAVE_TUTOR IN ('A','B','C','D')
);
DESCRIBE TUTORES;
--AGREGAR 5 REGISTROS
INSERT INTO TUTORES VALUES (1, 'ALEX', 'MASCULINO', '2225456512', 'A');
INSERT INTO TUTORES VALUES (2, 'DANNAE', 'FEMENINO', '7223654894', 'B');
INSERT INTO TUTORES VALUES (3, 'JESUS', 'MASCULINO', '3335647895', 'C');
INSERT INTO TUTORES VALUES (4, 'RAFAEL', 'MASCULINO', '5525647895', 'D');
INSERT INTO TUTORES VALUES (5, 'ADRIANA', 'FEMENINO', '6698547235', 'A');
--CREAR TABLA ALUMNO_TUTORES
--ID_AT
--ID_ALUMNO
--ID_TUTOR

CREATE TABLE ALUMNOS_TUTORES(
    ID_AT NUMBER PRIMARY KEY,
    ID_ALUMNO NUMBER,
    ID_TUTOR NUMBER
);

DESCRIBE ALUMNOS_TUTORES;

--AGREGAR LLAVES FORANEAS A TABLA ALUMNOS TUTORES
    
ALTER TABLE ALUMNOS_TUTORES ADD CONSTRAINT FK_AT_ID_ALUMNO 
    FOREIGN KEY (ID_ALUMNO)
    REFERENCES ALUMNOS (ID_ALUMNO);

ALTER TABLE ALUMNOS_TUTORES ADD CONSTRAINT FK_AT_ID_TUTOR 
    FOREIGN KEY (ID_TUTOR)
    REFERENCES TUTORES (ID_TUTOR);

--AGREGAR  REGISTROS
INSERT INTO ALUMNOS_TUTORES VALUES(1,2,1);
INSERT INTO ALUMNOS_TUTORES VALUES(2,2,2);
INSERT INTO ALUMNOS_TUTORES VALUES(3,3,3);
INSERT INTO ALUMNOS_TUTORES VALUES(4,4,4);
INSERT INTO ALUMNOS_TUTORES VALUES(5,5,5);

--EMPLEAR SECUENCIAS
--PARA GENERAR VALORES DE NUMEROS ENTEROS
-- O CON UN INCREMENTO QUE NOSOTROS INDIQUEMOS
--SE UTILIZA PARA GENERAR AUTOMATICAMENTE UNA SECUENCIA DE LOS VALORES DE LAS LLAVES PRIMARIAS
--Y ASI ASEGURAR QUE NO SE REPITAN REGISTROS CON EL MISMO ID

--CREANDO UNA SECUENCIA DEFINIENDO LOS VALORES


--CREAMOS LA SECUENCIA Y SU NOMBRE
CREATE SEQUENCE ALUMNO_SEQ
    START WITH 7 --INDICAMOS EN QUE VALOR INICIA
    INCREMENT BY 1 --INDICA EN QUE VALOR VA AUMENTAR
    MAXVALUE 999 --INDICA EL LIMITE MAXIMO
    MINVALUE 1 -- INDICA EL VALOR MINIMO
    NOCYCLE;  -- INDICA SI SE VA REPETIR O NO EN ESTE CASO NO 
    
--TRIGGER DISPARADOR -> EJECUTA O DESENCADENAR UNA ACCION
CREATE TRIGGER INSERT_ALUMNOS --CREAMOS EL TRIGGER Y SU NOMBRE
    BEFORE INSERT ON ALUMNOS FOR EACH ROW BEGIN --DONDE SE EJECUTA EL TRIGGER
    SELECT ALUMNO_SEQ.NEXTVAL INTO:NEW.ID_ALUMNO FROM DUAL; --SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

--ELIMINAR UN TRIGGER CON EL SIGUIENTE COMANDO
DROP TRIGGER INSERT_ALUMNOS;

DESCRIBE ALUMNOS;

--EN LA SIGUIENTE LINEA AUNQUE EL ID YA EXISTE EL TRIGGER ACTUA Y REMPLAZA EL VALOR SEGUN LA SECUENCIA
INSERT INTO ALUMNOS VALUES(1, 'ALEJANDRO', '14/03/1990', 'MASCULINO', '8o SEMESTRE', 1);

SELECT * FROM ALUMNOS;

DROP TABLE ALUMNOS_TUTORES;

--CREAR UNA SECUENCIA EN ALUMNOS_TUTORES
--ESTO APLICA CUANDO LA TABLA AUN NO CONTIENE NINGUN VALOR 
--LA SECUENCIA EMPIEZA EN 1
CREATE SEQUENCE ALUMNOS_TUTORES_SEQ;

CREATE TRIGGER INSERT_ALUMNOS_TUTORES --CREAMOS EL TRIGGER Y SU NOMBRE
    BEFORE INSERT ON ALUMNOS_TUTORES FOR EACH ROW BEGIN --DONDE SE EJECUTA EL TRIGGER
    SELECT ALUMNOS_TUTORES_SEQ.NEXTVAL INTO:NEW.ID_AT FROM DUAL; --SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

DROP TRIGGER INSERT_ALUMNOS_TUTORES;

commit;
SELECT * FROM ALUMNOS_TUTORES;

--AGREGAR  REGISTROS (EN ESTOS REISTROS ACTUA EL TRIGGER EN AUTOMATICO 
-- Y NO TOMA EN CUENTA EL VALOR DEL ID_AT PORQUE EN AUTOMATICO SE ASIGNA 
-- MEDIANTE LA SECUENCIA Y EL TRIGGER INSERT_ALUMNOS_TUTORES  
INSERT INTO ALUMNOS_TUTORES VALUES(1,2,1);
INSERT INTO ALUMNOS_TUTORES VALUES(1,2,2);
INSERT INTO ALUMNOS_TUTORES VALUES(1,3,3);
INSERT INTO ALUMNOS_TUTORES VALUES(1,4,4);
INSERT INTO ALUMNOS_TUTORES VALUES(1,5,5);

--INSERTANDO VALORES INDICANDO SOLO LOS CAMPOS QUE QUEREMOS INGRESAR
INSERT INTO ALUMNOS_TUTORES (ID_ALUMNO, ID_TUTOR) VALUES (4, 1);
INSERT INTO ALUMNOS_TUTORES (ID_ALUMNO, ID_TUTOR) VALUES (3, 2);

--FORMA DE INSERCION MASIVA
INSERT ALL  
    INTO ALUMNOS (NOMBRE, FECHA_DE_NACIMIENTO,SEXO,SEMESTRE,STATUS) VALUES ('JESUS','13/05/1990','MASCULINO','8o SEMESTRE',1)    
    INTO ALUMNOS (NOMBRE, FECHA_DE_NACIMIENTO,SEXO,SEMESTRE,STATUS) VALUES ('AARON','13/07/1990','MASCULINO','8o SEMESTRE',1)
    INTO ALUMNOS (NOMBRE, FECHA_DE_NACIMIENTO,SEXO,SEMESTRE,STATUS) VALUES ('CAROLINA','13/05/1996','FEMENINO','8o SEMESTRE',1)
SELECT * FROM DUAL;

SELECT * FROM ALUMNOS;

COMMIT;

--------------------------------------------------------------------------------
--EJERCIOCIO 1: GABINETE DE ABOGADOS

--TABLA DE CLIENTES-------------------------------------------------------------
--ID_CLIENTE
--DNI
--NOMBRE
--DIRECCION
--TELEFONO
CREATE TABLE CLIENTES(
    ID_CLIENTE NUMBER PRIMARY KEY,
    DNI NVARCHAR2(20),
    NOMBRE NVARCHAR2(30),
    DIRECCION NVARCHAR2(50),
    TELEFONO NVARCHAR2(10)
);

--SECUENCIA Y TRIGGER DE TABLA CLIENTES
CREATE SEQUENCE CLIENTES_SEQ;

CREATE TRIGGER INSERT_CLIENTE --CREAMOS EL TRIGGER Y SU NOMBRE
    BEFORE INSERT ON CLIENTES FOR EACH ROW BEGIN --DONDE SE EJECUTA EL TRIGGER
    SELECT CLIENTES_SEQ.NEXTVAL INTO:NEW.ID_CLIENTE FROM DUAL; --SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

--AGREGANDO REGISTROS A LA TABLA CLIENTES
INSERT ALL  
    INTO CLIENTES (DNI,NOMBRE, DIRECCION, TELEFONO) VALUES ('123456789', 'MARTIN', '20 DE NOVIEMBRE No. 180, XONACATLAN', '2222222222')
    INTO CLIENTES (DNI,NOMBRE, DIRECCION, TELEFONO) VALUES ('123455688', 'CAROLINA', '16 DE SEPTIEMBRE No. 30, METEPEC', '1111111111')
    INTO CLIENTES (DNI,NOMBRE, DIRECCION, TELEFONO) VALUES ('123454587', 'EDUARDO', 'INDEPENDENCIA No. 10, MONTERREY', '6666666666')
    INTO CLIENTES (DNI,NOMBRE, DIRECCION, TELEFONO) VALUES ('123445684', 'STEPHANY', 'MIGUEL HIDALGO No. 18, VILLAHERMOSA', '8888888888')
    INTO CLIENTES (DNI,NOMBRE, DIRECCION, TELEFONO) VALUES ('123451445', 'AARON', 'VICENTE GUERRERO No. 80, TOLUCA', '1010101010')
SELECT * FROM DUAL;

SELECT * FROM CLIENTES;

--TABLA DE ABOGADOS-------------------------------------------------------------
--ID_ABOGADO
--DNI
--NOMBRE
--TELEFONO
CREATE TABLE ABOGADOS(
    ID_ABOGADO NUMBER PRIMARY KEY,
    NOMBRE NVARCHAR2(30),
    EMAIL NVARCHAR2(50),
    TELEFONO NVARCHAR2(10)
);

--SECUENCIA Y TRIGGER DE TABLA ABOGADOS
CREATE SEQUENCE ABOGADOS_SEQ;

CREATE TRIGGER INSERT_ABOGADO --CREAMOS EL TRIGGER Y SU NOMBRE
    BEFORE INSERT ON ABOGADOS FOR EACH ROW BEGIN --DONDE SE EJECUTA EL TRIGGER
    SELECT ABOGADOS_SEQ.NEXTVAL INTO:NEW.ID_ABOGADO FROM DUAL; --SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

--AGREGANDO REGISTROS A LA TABLA ABOGADOS
INSERT ALL  
    INTO ABOGADOS (NOMBRE, EMAIL, TELEFONO) VALUES ('RAFAEL','RAFAEL@MAIL.COM','999999999')
    INTO ABOGADOS (NOMBRE, EMAIL, TELEFONO) VALUES ('BRENDA','BRENDA@MAIL.COM','1111111111')
    INTO ABOGADOS (NOMBRE, EMAIL, TELEFONO) VALUES ('MIGUEL','MIGUEL@MAIL.COM','8888888888')
    INTO ABOGADOS (NOMBRE, EMAIL, TELEFONO) VALUES ('TATIANA','TATIANA@MAIL.COM','2222222222')
    INTO ABOGADOS (NOMBRE, EMAIL, TELEFONO) VALUES ('ERICK','ERICK@MAIL.COM','7777777777')
SELECT * FROM DUAL;

SELECT * FROM ABOGADOS;

--TABLA ASUNTOS-----------------------------------------------------------------
--ID_EXPEDIENTE
--FECHA_INICIO
--FECHA_ARCHIVO
--ESTADO
CREATE TABLE ASUNTOS(
    ID_EXPEDIENTE NUMBER PRIMARY KEY,
    FECHA_INICIO DATE,
    FECHA_ARCHIVO DATE,
    ESTADO NVARCHAR2(30)
);
--SECUENCIA Y TRIGGER DE TABLA ASUNTOS
CREATE SEQUENCE ASUNTOS_SEQ;

CREATE TRIGGER INSERT_EXPEDIENTE --CREAMOS EL TRIGGER Y SU NOMBRE
    BEFORE INSERT ON ASUNTOS FOR EACH ROW BEGIN --DONDE SE EJECUTA EL TRIGGER
    SELECT ASUNTOS_SEQ.NEXTVAL INTO:NEW.ID_EXPEDIENTE FROM DUAL; --SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

--AGREGANDO REGISTROS A LA TABLA ASUNTOS
INSERT ALL  
    INTO ASUNTOS (FECHA_INICIO, FECHA_ARCHIVO, ESTADO) VALUES ('20/10/2015','10/01/2020','ARCHIVADO')
    INTO ASUNTOS (FECHA_INICIO, FECHA_ARCHIVO, ESTADO) VALUES ('08/01/2018','15/05/2022','EN TRAMITE')
    INTO ASUNTOS (FECHA_INICIO, FECHA_ARCHIVO, ESTADO) VALUES ('02/11/2022','10/02/2023','EN TRAMITE')
    INTO ASUNTOS (FECHA_INICIO, FECHA_ARCHIVO, ESTADO) VALUES ('20/10/2017','08/01/2022','ARCHIVADO')
    INTO ASUNTOS (FECHA_INICIO, FECHA_ARCHIVO, ESTADO) VALUES ('20/09/2022','27/02/2023','EN TRAMITE')
SELECT * FROM DUAL;

SELECT * FROM ASUNTOS;

--TABLA ASUNTOS_CLIENTE---------------------------------------------------------
--ID_AC
--ID_EXPEDIENTE
--ID_CLIENTE

CREATE TABLE ASUNTOS_CLIENTE(
    ID_AC NUMBER PRIMARY KEY,
    ID_EXPEDIENTE NUMBER UNIQUE,
    ID_CLIENTE NUMBER,
    CONSTRAINT FK_AC_ID_EXPEDIENTE
        FOREIGN KEY(ID_EXPEDIENTE)
        REFERENCES ASUNTOS(ID_EXPEDIENTE),
    CONSTRAINT FK_AC_ID_CLIENTE
        FOREIGN KEY(ID_CLIENTE)
        REFERENCES CLIENTES(ID_CLIENTE)
);
--SECUENCIA Y TRIGGER DE TABLA ASUNTOS_CLIENTE
CREATE SEQUENCE ASUNTOS_CLIENTE_SEQ;

CREATE TRIGGER INSERT_ASUNTOS_CLIENTE --CREAMOS EL TRIGGER Y SU NOMBRE
    BEFORE INSERT ON ASUNTOS_CLIENTE FOR EACH ROW BEGIN --DONDE SE EJECUTA EL TRIGGER
    SELECT ASUNTOS_CLIENTE_SEQ.NEXTVAL INTO:NEW.ID_AC FROM DUAL; --SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

--AGREGANDO REGISTROS A LA TABLA ASUNTOS_CLIENTE
INSERT ALL  
    INTO ASUNTOS_CLIENTE (ID_EXPEDIENTE, ID_CLIENTE) VALUES (1,1)
    INTO ASUNTOS_CLIENTE (ID_EXPEDIENTE, ID_CLIENTE) VALUES (2,2)
    INTO ASUNTOS_CLIENTE (ID_EXPEDIENTE, ID_CLIENTE) VALUES (3,3)
    INTO ASUNTOS_CLIENTE (ID_EXPEDIENTE, ID_CLIENTE) VALUES (4,4)
    INTO ASUNTOS_CLIENTE (ID_EXPEDIENTE, ID_CLIENTE) VALUES (5,1)
SELECT * FROM DUAL;

SELECT * FROM ASUNTOS_CLIENTE;

--TABLA ASUNTOS_ABOGADO---------------------------------------------------------
--ID_AA
--ID_EXPEDIENTE
--ID_ABOGADO

CREATE TABLE ASUNTOS_ABOGADO(
    ID_AA NUMBER PRIMARY KEY,
    ID_EXPEDIENTE NUMBER,
    ID_ABOGADO NUMBER,
    CONSTRAINT FK_AA_ID_EXPEDIENTE
        FOREIGN KEY(ID_EXPEDIENTE)
        REFERENCES ASUNTOS(ID_EXPEDIENTE),
    CONSTRAINT FK_AA_ID_ABOGADO
        FOREIGN KEY(ID_ABOGADO)
        REFERENCES ABOGADOS(ID_ABOGADO)
);

--SECUENCIA Y TRIGGER DE TABLA ASUNTOS_ABOGADO
CREATE SEQUENCE ASUNTOS_ABOGADO_SEQ;

CREATE TRIGGER INSERT_ASUNTOS_ABOGADO --CREAMOS EL TRIGGER Y SU NOMBRE
    BEFORE INSERT ON ASUNTOS_ABOGADO FOR EACH ROW BEGIN --DONDE SE EJECUTA EL TRIGGER
    SELECT ASUNTOS_ABOGADO_SEQ.NEXTVAL INTO:NEW.ID_AA FROM DUAL; --SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

--AGREGANDO REGISTROS A LA TABLA ASUNTOS_ABOGADO
INSERT ALL  
    INTO ASUNTOS_ABOGADO (ID_EXPEDIENTE, ID_ABOGADO) VALUES (1,1)
    INTO ASUNTOS_ABOGADO (ID_EXPEDIENTE, ID_ABOGADO) VALUES (2,2)
    INTO ASUNTOS_ABOGADO (ID_EXPEDIENTE, ID_ABOGADO) VALUES (2,1)
    INTO ASUNTOS_ABOGADO (ID_EXPEDIENTE, ID_ABOGADO) VALUES (3,3)
    INTO ASUNTOS_ABOGADO (ID_EXPEDIENTE, ID_ABOGADO) VALUES (4,4)
SELECT * FROM DUAL;

SELECT * FROM ASUNTOS_ABOGADO;

COMMIT;
--------------------------------------------------------------------------------
--EJERCICIO 2 -CLUB NAUTICO
--------------------------------------------------------------------------------

--TABLA SOCIOS
--ID_SOCIO
--NOMBRE
--NUM_AMARRE
--CUOTA
CREATE TABLE SOCIOS(
    ID_SOCIO NUMBER PRIMARY KEY,
    NOMBRE NVARCHAR2(30),
    TELEFONO NVARCHAR2(10),
    NUM_AMARRE NUMBER,
    CUOTA NUMBER(7,2)
);
CREATE SEQUENCE SOCIOS_SEQ;

CREATE TRIGGER INSERT_SOCIOS --CREAMOS EL TRIGGER Y SU NOMBRE
    BEFORE INSERT ON SOCIOS FOR EACH ROW BEGIN --DONDE SE EJECUTA EL TRIGGER
    SELECT SOCIOS_SEQ.NEXTVAL INTO:NEW.ID_SOCIO FROM DUAL; --SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

INSERT ALL  
    INTO SOCIOS (NOMBRE, TELEFONO, NUM_AMARRE, CUOTA) VALUES ('MARIO', '2222222222', 25, 15000)
    INTO SOCIOS (NOMBRE, TELEFONO, NUM_AMARRE, CUOTA) VALUES ('ALEJANDRO', '2233366655', 22, 15000)
    INTO SOCIOS (NOMBRE, TELEFONO, NUM_AMARRE, CUOTA) VALUES ('MARTIN', '8888888888', 26, 15000)
    INTO SOCIOS (NOMBRE, TELEFONO, NUM_AMARRE, CUOTA) VALUES ('RAUL', '9999999999', 20, 15000)
SELECT * FROM DUAL;

SELECT * FROM SOCIOS;

--TABLA PATRONES---------------------------------------------------------------
--ID_PATRON
--NOMBRE
--TELEFONO
--DIRECCION
CREATE TABLE PATRONES(
    ID_PATRON NUMBER PRIMARY KEY,
    NOMBRE NVARCHAR2(30),
    TELEFONO NVARCHAR2(10),
    DIRECCION NVARCHAR2(50)
);
CREATE SEQUENCE PATRONES_SEQ;

CREATE TRIGGER INSERT_PATRONES --CREAMOS EL TRIGGER Y SU NOMBRE
    BEFORE INSERT ON PATRONES FOR EACH ROW BEGIN --DONDE SE EJECUTA EL TRIGGER
    SELECT PATRONES_SEQ.NEXTVAL INTO:NEW.ID_PATRON FROM DUAL; --SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

INSERT ALL  
    INTO PATRONES (NOMBRE, TELEFONO, DIRECCION) VALUES ('ARTURO', '2222222222', 'CALLE 1')
    INTO PATRONES (NOMBRE, TELEFONO, DIRECCION) VALUES ('MIGUEL', '2222222222', 'CALLE 2')
    INTO PATRONES (NOMBRE, TELEFONO, DIRECCION) VALUES ('VALERIA', '2222222222', 'CALLE 3')
    INTO PATRONES (NOMBRE, TELEFONO, DIRECCION) VALUES ('LAURA', '2222222222', 'CALLE 4')
SELECT * FROM DUAL;

SELECT * FROM PATRONES;
--TABLA BARCOS-----------------------------------------------------------------
--ID_BARCO
--ID_SOCIO
--ID_PATRON
--NOMBRE
--TIPO
--COLOR
CREATE TABLE BARCOS(
    ID_BARCO NUMBER PRIMARY KEY,
    ID_SOCIO NUMBER,
    NOMBRE NVARCHAR2(30),
    TIPO NVARCHAR2(30),
    COLOR NVARCHAR2(120),
    CONSTRAINT FK_B_ID_SOCIO
        FOREIGN KEY(ID_SOCIO)
        REFERENCES SOCIOS(ID_SOCIO)
);
CREATE SEQUENCE BARCOS_SEQ;

CREATE TRIGGER INSERT_BARCOS --CREAMOS EL TRIGGER Y SU NOMBRE
    BEFORE INSERT ON BARCOS FOR EACH ROW BEGIN --DONDE SE EJECUTA EL TRIGGER
    SELECT BARCOS_SEQ.NEXTVAL INTO:NEW.ID_BARCO FROM DUAL; --SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

INSERT ALL  
    INTO BARCOS (ID_SOCIO, NOMBRE, TIPO, COLOR) VALUES (1, 'LA NIÑA', 'CARGA', 'AZUL')
    INTO BARCOS (ID_SOCIO, NOMBRE, TIPO, COLOR) VALUES (1, 'LA PINTA', 'CARGA', 'ROJO')
    INTO BARCOS (ID_SOCIO, NOMBRE, TIPO, COLOR) VALUES (2, 'LA SANTA MARIA', 'CARGA', 'VERDE')
    INTO BARCOS (ID_SOCIO, NOMBRE, TIPO, COLOR) VALUES (3, 'EL PARAISO', 'TURISMO', 'AZUL')
SELECT * FROM DUAL;

SELECT * FROM BARCOS;
--TABLA SALIDAS_BARCO
--ID_SALIDA
--ID_BARCO
--FECHA_SALIDA
--HORA_SALIDA
--DESTINO
DROP TABLE SALIDAS_BARCO;
CREATE TABLE SALIDAS_BARCO(
    ID_SALIDA NUMBER PRIMARY KEY,
    ID_BARCO NUMBER,
    ID_PATRON NUMBER,
    FECHAHORA_SALIDA DATE,
    DESTINO NVARCHAR2(50),
    CONSTRAINT FK_SB_ID_BARCO
        FOREIGN KEY(ID_BARCO)
        REFERENCES BARCOS(ID_BARCO),
    CONSTRAINT FK_SB_ID_PATRON
        FOREIGN KEY(ID_PATRON)
        REFERENCES PATRONES(ID_PATRON)
);
DROP SEQUENCE SALIDAS_BARCO_SEQ;
DROP TRIGGER INSERT_SALIDAS_BARCO;

CREATE SEQUENCE SALIDAS_BARCO_SEQ;

CREATE TRIGGER INSERT_SALIDAS_BARCO --CREAMOS EL TRIGGER Y SU NOMBRE
    BEFORE INSERT ON SALIDAS_BARCO FOR EACH ROW BEGIN --DONDE SE EJECUTA EL TRIGGER
    SELECT SALIDAS_BARCO_SEQ.NEXTVAL INTO:NEW.ID_SALIDA FROM DUAL; --SELECCIONA EL VALOR DE LA SECUENCIA Y LO INSERTA
END;

INSERT ALL  
    INTO SALIDAS_BARCO (ID_BARCO, ID_PATRON,FECHAHORA_SALIDA,DESTINO) VALUES (1,1,TO_DATE('20/02/2023 14:00:00', 'DD-MM-YYYY HH24:MI:SS'),'CANCUN')
    INTO SALIDAS_BARCO (ID_BARCO, ID_PATRON,FECHAHORA_SALIDA,DESTINO) VALUES (2,2,TO_DATE('21/01/2023 13:00:00', 'DD-MM-YYYY HH24:MI:SS'),'VERACRUZ')
    INTO SALIDAS_BARCO (ID_BARCO, ID_PATRON,FECHAHORA_SALIDA,DESTINO) VALUES (1,1,TO_DATE('22/02/2023 15:00:00', 'DD-MM-YYYY HH24:MI:SS'),'PANAMA')
    INTO SALIDAS_BARCO (ID_BARCO, ID_PATRON,FECHAHORA_SALIDA,DESTINO) VALUES (3,3,TO_DATE('23/01/2023 12:00:00', 'DD-MM-YYYY HH24:MI:SS'),'YUCATAN')
SELECT * FROM DUAL;

SELECT * FROM SALIDAS_BARCO;
COMMIT;